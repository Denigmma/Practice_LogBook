'''
Получив массив символов chars, сожмите его, используя следующий алгоритм:

Начните с пустой строки s. Для каждой группы повторяющихся подряд символов в chars:

Если длина группы равна 1, добавьте символ в s.
В противном случае добавьте символ, за которым следует длина группы.
Сжатая строка s не должна возвращаться отдельно, а вместо этого должна храниться во входном массиве символов chars.
Обратите внимание, что группы длиной 10 или больше будут разделены на несколько символов в chars.

После того как вы закончите изменять входной массив, верните новую длину массива.

Вы должны написать алгоритм, который использует только постоянное дополнительное пространство.


Пример 1:

Ввод: символы = ["a","a","b","b","c","c","c"]
Вывод: верните 6, и первые 6 символов входного массива должны быть: ["a","2","b","2","c","3"]
Пояснение: группы — "aa", "bb" и "ccc". Это сокращается до "a2b2c3".
Пример 2:

Ввод: chars = ["a"]
Вывод: Вернуть 1, а первый символ входного массива должен быть: ["a"]
Пояснение: Единственная группа — это "a", которая остаётся без сжатия, так как состоит из одного символа.
Пример 3:

Ввод: символы = ["a","b","b","b","b","b","b","b","b","b","b","b","b","b","b"]
Вывод: верните 4, и первые 4 символа входного массива должны быть: ["a", "b", "1", "2"].
Пояснение: группы — это "a" и "bbbbbbbbbbbb". Это сокращается до "ab12".


Ограничения:

1 <= chars.length <= 2000
chars[i] является строчной английской буквой, заглавной английской буквой, цифрой или символом.
'''

from typing import List

class Solution:
    def compress(self, chars: List[str]) -> int:
        write = 0
        last = 0
        n=len(chars)

        for i in range(n):
            if i==n-1 or chars[i]!=chars[i+1]:
                chars[write]=chars[i]
                write += 1
                if i-last+1>1:
                    for c in str(i-last+1):
                        chars[write] = c
                        write += 1
                last=i+1
        return write


solution = Solution()
nums = ["a","a","b","b","c","c","c"]
print(solution.compress(nums))