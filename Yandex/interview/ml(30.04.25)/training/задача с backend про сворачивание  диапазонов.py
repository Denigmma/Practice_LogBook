'''
Дан массив целых чисел nums длины n.
Стоимость массива — значение его первого элемента. Например, стоимость массива [1, 2, 3] — 1, а стоимость [3, 4, 1] — 3.
Нужно разделить массив на 3 непрерывных непересекающихся подмассива.
Написать функцию, которая возвращает минимальную из возможных сумм стоимостей этих трех подмассивов.

Примеры:
min_cost([1, 2, 3, 12]) -> 6
т.к. можно разделить массив на следующие подмассивы: [1], [2], [3, 12]

min_cost([5, 4, 3]) -> 12
т.к. можно разделить массив на следующие подмассивы: [5], [4], [3]

min_cost([10, 3, 1, 1]) -> 12
т.к. можно разделить массив на следующие подмассивы: [10, 3], [1], [1]
'''

def min_cost(nums):
    n = len(nums)
    min_sum = float('inf')
    for i in range(1, n - 1):
        for j in range(i + 1, n):
            cost = nums[0] + nums[i] + nums[j]
            min_sum = min(min_sum, cost)
    return min_sum

print(min_cost([10, 3, 41, 1]))